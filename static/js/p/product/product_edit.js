// Generated by CoffeeScript 1.6.3
/*
  SYD System
  @author: Bo Gao, [elivoa@gmail.com]
*/


(function() {
  var ProductEdit;

  ProductEdit = (function() {
    function ProductEdit(stockcache) {
      this.colorId = "color-area";
      this.sizeId = "size-area";
      this.csqTableId = "cs-container";
      if (stockcache !== void 0) {
        this.stockcache = JSON && JSON.parse(stockcache) || $.parseJSON(stockcache);
      } else {
        this.stockcache = {};
      }
      this.init();
    }

    ProductEdit.prototype.init = function() {
      var colorMT, sizeMT;
      colorMT = new EditableTable(this.colorId);
      colorMT.onRemoveLastLine = function(line) {
        return $(line).find("input").each(function(idx, obj) {
          $(obj).attr("value", "");
          return $(obj).val("");
        });
      };
      colorMT.afterRemove = $.proxy(this.onCSQTableRefresh, this);
      sizeMT = new EditableTable(this.sizeId);
      sizeMT.onRemoveLastLine = function() {
        return $(line).find("input").each(function(idx, obj) {
          $(obj).attr("value", "");
          return $(obj).val("");
        });
      };
      sizeMT.afterRemove = $.proxy(this.onCSQTableRefresh, this);
      $('body').on("blur", ".csq-trigger", $.proxy(this.onCSQTableRefresh, this));
      return this.firstTimeDrawCSQTable();
    };

    ProductEdit.prototype.firstTimeDrawCSQTable = function() {
      var pcstg, _ref;
      _ref = this.readColorSizes(), this.colors = _ref[0], this.sizes = _ref[1];
      pcstg = new ProductCSTableGenerator(this.colors, this.sizes, this.csqTableId);
      return this.fillProductQuantity();
    };

    ProductEdit.prototype.onCSQTableRefresh = function() {
      var pcstg, _ref, _ref1;
      _ref = this.readColorSizes(), this.colors = _ref[0], this.sizes = _ref[1];
      this.cacheStock();
      pcstg = new ProductCSTableGenerator(this.colors, this.sizes, this.csqTableId);
      _ref1 = this.readColorSizes(), this.colors = _ref1[0], this.sizes = _ref1[1];
      return this.fillProductQuantity();
    };

    ProductEdit.prototype.readColorSizes = function() {
      var colors, sizes;
      colors = [];
      sizes = [];
      $("#" + this.colorId + " .mt-line .csq-trigger").each(function(idx, obj) {
        var v;
        v = obj.value.replace(/^\s+|\s+$/g, "");
        if (v !== "") {
          return colors.push(v);
        }
      });
      $("#" + this.sizeId + " .mt-line .csq-trigger").each(function(idx, obj) {
        var v;
        v = obj.value.replace(/^\s+|\s+$/g, "");
        if (v !== "") {
          return sizes.push(v);
        }
      });
      return [colors, sizes];
    };

    ProductEdit.prototype.cacheStock = function() {
      var color, key, o, size, _i, _len, _ref, _results;
      _ref = this.colors;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        color = _ref[_i];
        _results.push((function() {
          var _j, _len1, _ref1, _results1;
          _ref1 = this.sizes;
          _results1 = [];
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            size = _ref1[_j];
            key = "" + color + "__" + size;
            o = $("#" + this.csqTableId + " #csq_" + key);
            if (o !== void 0) {
              _results1.push(this.stockcache[key] = o.val());
            } else {
              _results1.push(void 0);
            }
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    ProductEdit.prototype.fillProductQuantity = function() {
      var k, o, v, _ref, _results;
      _ref = this.stockcache;
      _results = [];
      for (k in _ref) {
        v = _ref[k];
        o = $("#" + this.csqTableId + " #csq_" + k);
        if (o !== void 0) {
          _results.push(o.val(v));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    return ProductEdit;

  })();

  $(function() {
    return window['ProductEdit'] = ProductEdit;
  });

}).call(this);
