// Generated by CoffeeScript 1.6.3 || modified by gb.
(function() {
  var OrderPrint;

  window.OrderPrint = OrderPrint = (function() {
    function OrderPrint(config) {
      this.containerClass = ".order-form-container";
      this.data = {
        order: [],
        products: {}
      };
      this.showpic = false;
      this.refreshOrderForm();
    }

    OrderPrint.prototype.setData = function(json) {
      this.data = json;
      this.showpic = json.showpic;
      return this.refreshOrderForm();
    };

    OrderPrint.prototype.refreshOrderForm = function() {
      var footers, id, idx, product, q, sumPrice, sumQuantity, tbody, totalPrice, totalQuantity, tr, _i, _j, _len, _len1, _ref, _ref1;
      tbody = $("" + this.containerClass + " tbody");
      tbody.html("");
      sumQuantity = 0;
      sumPrice = 0;
      idx = 1;
      _ref = this.data.order;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        id = _ref[_i];
        product = this.data.products[id];
        if (product) {
          totalQuantity = 0;
          _ref1 = product.quantity;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            q = _ref1[_j];
            totalQuantity += q[2];
          }
          totalPrice = totalQuantity * product.price;
          sumQuantity += totalQuantity;
          sumPrice += totalPrice;
          tr = $(this.generateTR(product, totalQuantity, totalPrice, idx++).join("\n"));
          tbody.append(tr);
          tbody.append("<tr><td colspan=\"8\" class=\"line\">&nbsp;</td></tr>");
        } else {
          if (console) {
            console.log("[OrderDetailsForm] Error id in order list " + id + ".");
          }
        }
      }
      footers = this.appendFooter(sumQuantity, sumPrice);
      tbody.append(footers.join("\n"));
      return this.updateSummary(sumQuantity, sumPrice);
    };

    OrderPrint.prototype.updateSummary = function(sumQuantity, sumPrice) {
      var tfoot;
      tfoot = $("" + this.containerClass + " .other_info");
      tfoot.find(".sumQuantity").html(sumQuantity);
      return tfoot.find(".sumPrice").html(sumPrice);
    };

    OrderPrint.prototype.generateTR = function(json, totalQuantity, totalPrice, idx) {
      var htmls, nquantity, q, quantities, quantity, _i, _j, _len, _len1, _ref, _ref1;
      quantities = [];
      _ref = json.quantity;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        q = _ref[_i];
        if (q[2] > 0) {
          quantities.push(q);
        }
      }
      nquantity = quantities.length;
      htmls = [];
      htmls.push("<tr>");
      htmls.push("  <td>" + idx + "</td>");
      if(this.showpic){ // show pictures.
        console.log("showpic:", json.pic);
        htmls.push("  <td valign='top' class='pic' rowspan='" + nquantity + "'>");
        htmls.push("    <img src='" + json.pic + "' style='" + json.style + "'></img>");
        htmls.push("  </td>");
      }
      htmls.push("  <td valign='top' class='title' rowspan='" + nquantity + "'>");
      htmls.push("    <strong>" + json.name + "</strong>");
      htmls.push("  </td>");
      htmls.push("  <td valign='top' rowspan='" + nquantity + "' class='money'>");
      htmls.push("    <span class='price'>" + json.price + "</span>");
      htmls.push("  </td>");
      if (quantities[0][0] === "默认颜色") {
        htmls.push("  <td>-</td>");
      } else {
        htmls.push("  <td>" + quantities[0][0] + "</td>");
      }
      htmls.push("  <td>" + quantities[0][1] + "</td>");
      htmls.push("  <td>" + quantities[0][2] + "</td>");
      htmls.push("  <td valign='top' rowspan='" + nquantity + "'>");
      htmls.push("      <strong>" + totalQuantity + "</strong></td>");
      htmls.push("  <td valign='top' align='right' rowspan='" + nquantity + "'>");
      htmls.push("      <strong class='price'>" + totalPrice + "</strong></td>");
      if (json.note === void 0 || json.note === null || json.note.replace(/^\s+|\s+$/g, '') === "") {
        htmls.push("  <td valign='top' rowspan='" + nquantity + "'>-</td>");
      } else {
        htmls.push("  <td valign='top' rowspan='" + nquantity + "'>" + json.note + "</td>");
      }
      htmls.push("</tr>");
      _ref1 = quantities.slice(1, nquantity);
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        quantity = _ref1[_j];
        htmls.push("<tr>");
        htmls.push("  <td></td>");
        if (quantity[0] === "默认颜色") {
          htmls.push("  <td>-</td>");
        } else {
          htmls.push("  <td>" + quantity[0] + "</td>");
        }
        htmls.push("  <td>" + quantity[1] + "</td>");
        htmls.push("  <td>" + quantity[2] + "</td>");
        htmls.push("</tr>");
      }
      return htmls;
    };

    OrderPrint.prototype.appendFooter = function(sumQuantity, sumPrice) {
      var footer;
      footer = [];
      footer.push("<tr class='total'>");
      footer.push("<td valign='top' align='right'><strong>总计</strong></td>");
      footer.push("<td valign='top'>&nbsp;</td>");
      footer.push("<td valign='top'>&nbsp;</td>");
      footer.push("<td valign='top'>&nbsp;</td>");
      footer.push("<td valign='top'>&nbsp;</td>");
      footer.push("<td valign='top'>&nbsp;</td>");
      footer.push("<td valign='top' align='center' rowspan='1'><strong>" + sumQuantity + "</strong></td>");
      footer.push("<td valign='top' align='right' rowspan='1'><strong class='price'>" + sumPrice + "</strong></td>");
      footer.push("     <td valign='top'>&nbsp;</td>");
      footer.push(" </tr>");
      return footer;
    };

    OrderPrint.prototype.addTestData = function() {
      var testproduct;
      testproduct = {
        id: 1,
        name: "绣虎头",
        price: 138,
        productPrice: 120,
        note: "no note",
        colors: ["红色", "蓝色"],
        sizes: ["S", "M"],
        quantity: [["红色", "S", 101], ["红色", "M", 102], ["蓝色", "S", 203], ["蓝色", "M", 204]]
      };
      this.addProduct(testproduct);
      return this.addProduct({
        id: 2,
        name: "鲸鱼宝宝",
        price: 138,
        note: "no note",
        quantity: [["默认颜色", "均码", 1098]]
      });
    };

    return OrderPrint;

  })();

}).call(this);
